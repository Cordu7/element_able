/* This makes the layout work */
/* The styled-component in ElementInTable just sets up variables and this picks up those positions */
.PeriodicTable {
    display: grid;
    grid-auto-rows: var(--periodic-table-cell-size);
    grid-auto-columns: var(--periodic-table-cell-size);
    gap: calc(var(--periodic-table-cell-size) / 8);
    padding: calc(var(--periodic-table-cell-size) / 8);

    width: fit-content;
    height: fit-content;
}

.PeriodicTable > .ElementInTable {
    border: 1px solid grey;
    aspect-ratio: 1;
    overflow: hidden;

    grid-row: var(--periodic-table-row) / span 1;
    grid-column: var(--periodic-table-column) / span 1;

    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 67% 33%;
    align-items: center;
    justify-items: center;
}

.ElementInTable {
    background-color: var(--element-in-table-bg-light);
    color: black;
}

.ElementInTable:hover {
    background-color: var(--element-in-table-bg-hover);
}

.ElementInTable > .atomic-number {
    grid-row-start: 2;
    background-color: var(--element-in-table-bg-dark);
    color: white;
    width: 100%;
    text-align: center;
}

.ElementInTable > .symbol {
    grid-row-start: 1;
    font-size: var(--element-in-table-font-size);
    width: 100%;
    text-align: center;
}

.PeriodicTable > .element {
    grid-row: 1 / span 3;
    grid-column: 3 / span 10;
}

.PeriodicTable > .lanthanides-label {
    grid-row: 8 / span 1;
    grid-column: 1 / span 2;
}

.PeriodicTable > .actinides-label {
    grid-row: 9 / span 1;
    grid-column: 1 / span 2;
}

.PeriodicTable > .lanthanides-label,
.PeriodicTable > .actinides-label {
    align-self: center;
    justify-self: end;
}